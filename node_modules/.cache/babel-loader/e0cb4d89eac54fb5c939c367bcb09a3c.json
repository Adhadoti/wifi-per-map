{"ast":null,"code":"import _classCallCheck from \"/Users/devon/Desktop/Spring_2023/Senior Project/map_gui-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/devon/Desktop/Spring_2023/Senior Project/map_gui-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/devon/Desktop/Spring_2023/Senior Project/map_gui-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/devon/Desktop/Spring_2023/Senior Project/map_gui-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/devon/Desktop/Spring_2023/Senior Project/map_gui-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport Input from './input';\nimport { INPUT_EVENT_TYPES } from '../constants';\nimport { window, userAgent, passiveSupported } from '../utils/globals';\nvar firefox = userAgent.indexOf('firefox') !== -1;\nvar WHEEL_EVENTS = INPUT_EVENT_TYPES.WHEEL_EVENTS;\nvar EVENT_TYPE = 'wheel'; // Constants for normalizing input delta\n\nvar WHEEL_DELTA_MAGIC_SCALER = 4.000244140625;\nvar WHEEL_DELTA_PER_LINE = 40; // Slow down zoom if shift key is held for more precise zooming\n\nvar SHIFT_MULTIPLIER = 0.25;\n\nvar WheelInput = /*#__PURE__*/function (_Input) {\n  _inherits(WheelInput, _Input);\n\n  function WheelInput(element, callback, options) {\n    var _this;\n\n    _classCallCheck(this, WheelInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WheelInput).call(this, element, callback, options));\n    /* eslint-disable complexity, max-statements */\n\n    _this.handleEvent = function (event) {\n      if (!_this.options.enable) {\n        return;\n      }\n\n      var value = event.deltaY;\n\n      if (window.WheelEvent) {\n        // Firefox doubles the values on retina screens...\n        if (firefox && event.deltaMode === window.WheelEvent.DOM_DELTA_PIXEL) {\n          value /= window.devicePixelRatio;\n        }\n\n        if (event.deltaMode === window.WheelEvent.DOM_DELTA_LINE) {\n          value *= WHEEL_DELTA_PER_LINE;\n        }\n      }\n\n      if (value !== 0 && value % WHEEL_DELTA_MAGIC_SCALER === 0) {\n        // This one is definitely a mouse wheel event.\n        // Normalize this value to match trackpad.\n        value = Math.floor(value / WHEEL_DELTA_MAGIC_SCALER);\n      }\n\n      if (event.shiftKey && value) {\n        value = value * SHIFT_MULTIPLIER;\n      }\n\n      _this.callback({\n        type: EVENT_TYPE,\n        center: {\n          x: event.clientX,\n          y: event.clientY\n        },\n        delta: -value,\n        srcEvent: event,\n        pointerType: 'mouse',\n        target: event.target\n      });\n    };\n\n    _this.events = (_this.options.events || []).concat(WHEEL_EVENTS);\n\n    _this.events.forEach(function (event) {\n      return element.addEventListener(event, _this.handleEvent, passiveSupported ? {\n        passive: false\n      } : false);\n    });\n\n    return _this;\n  }\n\n  _createClass(WheelInput, [{\n    key: \"destroy\",\n    value: function destroy() {\n      var _this2 = this;\n\n      this.events.forEach(function (event) {\n        return _this2.element.removeEventListener(event, _this2.handleEvent);\n      });\n    }\n    /**\n     * Enable this input (begin processing events)\n     * if the specified event type is among those handled by this input.\n     */\n\n  }, {\n    key: \"enableEventType\",\n    value: function enableEventType(eventType, enabled) {\n      if (eventType === EVENT_TYPE) {\n        this.options.enable = enabled;\n      }\n    }\n  }]);\n\n  return WheelInput;\n}(Input);\n\nexport { WheelInput as default };","map":null,"metadata":{},"sourceType":"module"}